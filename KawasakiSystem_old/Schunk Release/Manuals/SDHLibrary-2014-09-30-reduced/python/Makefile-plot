#=======================================================================
#//! \file
#//! \section sdhlibrary_makefile_plot_general General file information
#//!   \author    Dirk Osswald 
#//!   \date      2007-01-03
#//!  
#//! \brief  
#//!   Makefile for automatic generation of plots with gnuplot
#//!
#//!
#//! \section sdhlibrary_makefile_plot_variables Makefile variables
#//!   - PLOTDIR : the directory to generate output in
#//!   - PLOTFILES* : lists of target files to generate
#//!     - PLOTFILES_WORKSPACE : visualization of the SDH finger workspace
#//!     - PLOTFILES_RAMP      : visualization of the velocity ramp movements
#//!     - PLOTFILES           : all the above target files
#//!   
#//! \section sdhlibrary_makefile_plot_targets Makefile targets
#//!   - plot_all  : generate all plots
#//!   - plot_info : show some settings
#//!   - plot_show : show all plots in X11 windows (for 3D splots this saves the
#//!                 view settings for later generation of the corresponding
#//!                 pdf files)
#//!   - plot_show_workspace : show plots of workspace onl in X11 windows
#//!   - plot_show_ramp      : show plots of ramp movements only in X11 windows
#//!
#//! \section sdhlibrary_makefile_plot_links Links
#//!   - The online documentation for \c gnu \c make can be found at
#//!     <a href="http://www.gnu.org/software/make/manual/make.html">
#//!     http://www.gnu.org/software/make/manual/make.html</a>
#//!   - Some sites with gnuplot specific documentation:
#//!     - gnuplot homepage: <a href="http://www.gnuplot.info/>
#//!       http://www.gnuplot.info/</a>
#//!     - gnuplot - not so Frequently Asked Questions: <a href="http://t16web.lanl.gov/Kawano/gnuplot/index-e.html>
#//!       http://t16web.lanl.gov/Kawano/gnuplot/index-e.html</a>
#//!   
#//! \section sdhlibrary_makefile_plot_copyright Copyright
#//!
#//!  Copyright (c) 2007 SCHUNK GmbH & Co. KG
#//!
#//!  <HR>
#//!  \internal
#//!
#//!    \subsection sdhlibrary_makefile_plot_details SVN related, detailed file specific information:
#//!      $LastChangedBy: Osswald2 $
#//!      $LastChangedDate: 2011-02-11 15:44:02 +0100 (Fr, 11 Feb 2011) $
#//!      \par SVN file revision:
#//!        $Id: Makefile-plot 6435 2011-02-11 14:44:02Z Osswald2 $
#//!
#//!  \subsection sdhlibrary_makefile_plot_changelog Changelog of this file:
#//!      \include Makefile-plot.log
#//!
#=======================================================================
#//! \cond ignore_me   doxygen cannot parse Makefiles, so just ignore it
# 

######################################################################
# Variable settings

## Directory for generated files (*.dat, *.dem, *.pdf, *.view)
PLOTDIR=./plot

## Directory for non generated data files
DATADIR=./data

## Plotfiles to visualize temperature progression:
PLOTFILES_TEMPERATURE= ${PLOTDIR}/temp.nomovement.controlleron.pdf ${PLOTDIR}/temp.nomovement.controlleroff.pdf 

## Plotfiles to visualize SDH workspace
PLOTFILES_WORKSPACE= ${PLOTDIR}/workspace.all.pdf ${PLOTDIR}/workspace.contour.pdf ${PLOTDIR}/workspace.contour2d.pdf

## Plotfiles to visualize new SDH velocity ramp movements:
# 
#  (SEQ is a sequence of 0 to n-1 where n is the number of rampX.dem
#  and rampX.dat files generated by the rule at the end of this
#  Makefile)
SEQ=$(shell seq 0 22)
PLOTFILES_RAMP=$(shell for i in ${SEQ}; do echo "${PLOTDIR}/ramp$$i.pdf" ; done)


## All target files to generate:
PLOTFILES= \
	${PLOTFILES_TEMPERATURE}          \
	${PLOTFILES_WORKSPACE}            \
	${PLOTFILES_RAMP}                 \
	${PLOTDIR}/joined_temperature.pdf \
	${PLOTDIR}/joined_workspace.pdf   \
	${PLOTDIR}/joined_ramps.pdf	  

## The cygwin path to the FreePDF_XP windows executable:
FREEPDF=/cygdrive/c/Programme/FreePDF_XP/freepdf.exe
#
######################################################################

########################################################################
#

# Create plot files directory
$(shell mkdir -p $(PLOTDIR) 2>/dev/null)
#
########################################################################

######################################################################
# Rules:

## Plot everything
.PHONY: plot_all
plot_all:    ${PLOTFILES} 


## Print some ploting settings
.PHONY: plot_info
plot_info:
	@echo "PLOT_WIDTH  = ${PLOT_WIDTH} mm"
	@echo "PLOT_HEIGHT = ${PLOT_HEIGHT} mm"
	@echo -e "COMMON_DIAGRAM_SETTINGS=<${COMMON_DIAGRAM_SETTINGS}>"
	@echo "PLOTDIR = ${PLOTDIR}"
	@echo "PLOTFILES = ${PLOTFILES}"


## Target to show all plots interactively as X11 windows
.PHONY: plot_show
plot_show: plot_show_temperature plot_show_workspace plot_show_ramp


## Target to show temperature plots interactively as X11 windows
.PHONY: plot_show_temperature
plot_show_temperature: ${PLOTFILES_TEMPERATURE:.pdf=.x11}


## Target to show workspace plots interactively as X11 windows
.PHONY: plot_show_workspace
plot_show_workspace: ${PLOTFILES_WORKSPACE:.pdf=.x11}


## Target to show ramp plots interactively as X11 windows
.PHONY: plot_show_ramp
plot_show_ramp: ${PLOTFILES_RAMP:.pdf=.x11}


## Target to clean up generated stuff (excluding 3D-view settings)
.PHONY: plot_clean
plot_clean:
	rm -rf ${PLOTDIR}/*.pdf  ${PLOTDIR}/*.dat  ${PLOTDIR}/*.dem  ${PLOTDIR}/*.bat ${PLOTDIR}/*.log 


## Target to really clean up generated stuff (including 3D-view settings)
.PHONY: plot_mrproper
plot_mrproper: plot_clean
	rm -rf ${PLOTDIR}/*.view


## Generic rules for generating *.pdf plots from gnuplot script files
#  in "*.dem" format.
#    First rule for auto-generated *.dem files:
%.pdf: %.dem 
	@echo "- Generating '$@' from '$<':"
	@touch ${basename $@}.view
	@echo "set terminal pdf ; set output '$@' ; load '${basename $@}.view'" > ${PLOTDIR}/gnuplot.prefix.dem
	@echo ""                                                                > ${PLOTDIR}/gnuplot.suffix.dem
	gnuplot ${PLOTDIR}/gnuplot.prefix.dem $< ${PLOTDIR}/gnuplot.suffix.dem

#   Second rule for user-generated *.dem files
%.pdf: ../%.dem 
	@echo "- Generating '$@' from '$<':"
	@touch ${basename $@}.view
	@echo "set terminal pdf ; set output '$@' ; load '${basename $@}.view'" > ${PLOTDIR}/gnuplot.prefix.dem
	@echo ""                                                                > ${PLOTDIR}/gnuplot.suffix.dem
	gnuplot ${PLOTDIR}/gnuplot.prefix.dem $< ${PLOTDIR}/gnuplot.suffix.dem


## Generic rules to generate an X11 window for interactive display of a
#  gnuplot *.dem file. For 3D splots this will save the view on exit for
#  possible later reuse in the pdf generation.
#    First rule for auto-generated *.dem files:
%.x11: %.dem
	@echo "- Generating X11 window from '$<':"
	@touch ${basename $@}.view
	@echo "set terminal X11 ; load '${basename $@}.view'"                                        > ${PLOTDIR}/gnuplot.prefix.dem
	@echo "pause -1 'Hit return to continue' ; save set '|grep -e view - > ${basename $@}.view'" > ${PLOTDIR}/gnuplot.suffix.dem
	gnuplot ${PLOTDIR}/gnuplot.prefix.dem $< ${PLOTDIR}/gnuplot.suffix.dem

#    Second rule for user-generated *.dem files:
%.x11: ../%.dem 
	@echo "- Generating X11 window from '$<':"
	@touch ${basename $@}.view
	@echo "set terminal X11 ; load '${basename $@}.view'"                                        > ${PLOTDIR}/gnuplot.prefix.dem
	@echo "pause -1 'Hit return to continue' ; save set '|grep -e view - > ${basename $@}.view'" > ${PLOTDIR}/gnuplot.suffix.dem
	gnuplot ${PLOTDIR}/gnuplot.prefix.dem $< ${PLOTDIR}/gnuplot.suffix.dem


## Generic rule for joining multiple PDF or Postscript files into one:
#    The prerequisits are joined into one pdf, so to make actual use of this rule
#    there must exist an additional makefile-rule like:
#      joined_BLA.pdf: BLA1.pdf BLA2.ps BLU.pdf BLI.ps
#
#    (Implementation note: This rule uses either pdftk or the FreePDF_XP tool, which is
#     a windows tool and thus must be called from a batch file. Such a
#     *.bat file is generated and called here.)
joined_%.pdf:
	@echo -e "\n- Joining '$^'" ;\
	echo -e -n "  into '$@'" ;\
	if which pdftk 1> /dev/null 2> /dev/null ; then \
	  echo " with pdftk" ;\
	  pdftk $^ cat output $@ ;\
	else \
	  echo " with freePDF" ;\
	  win_input="" ; \
	  for f in $^; do \
	    win_input="$$win_input \"`cygpath -w -a $$f`\"" ; \
	  done ;\
	  echo "`cygpath -w -a ${FREEPDF}` /m \"`cygpath -w -a $@`\"  $$win_input" > ${basename $@}.bat ; \
	  chmod a+x ${basename $@}.bat ;\
	  echo -e "\n\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" ;\
	  echo -e "! Please kill the FreePDF window manually after it has done its job !" ;\
	  echo -e "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n" ;\
	  ${basename $@}.bat ;\
	fi

######################################################################
# now the actual data plots

#---------------------------------------------------------------------
## temperature plots        


${PLOTDIR}/temp.nomovement.controlleron.pdf: ${DATADIR}/temp.nomovement.controlleron.dat

${PLOTDIR}/temp.nomovement.controlleroff.png: ${DATADIR}/temp.nomovement.controlleroff.dat

# join all temperature*.pdf files into joined_temperature.pdf
${PLOTDIR}/joined_temperature.pdf: ${PLOTFILES_TEMPERATURE}

#
#---------------------------------------------------------------------


#---------------------------------------------------------------------
## generate the workspace data:        

${PLOTDIR}/workspace.all.dat: demo/demo-calc-workspace.py 
	cd .. && source sdhsetenv && cd python/ && demo-calc-workspace.py --s1=3 -t all > $@

${PLOTDIR}/workspace.contour.dat: demo/demo-calc-workspace.py 
	cd .. && source sdhsetenv && cd python/ && demo-calc-workspace.py --s1=3 -t contour > $@


## additional dependencies for the plots
${PLOTDIR}/workspace.all.pdf: ${PLOTDIR}/workspace.all.dat workspace.all.dem 

${PLOTDIR}/workspace.contour.pdf: ${PLOTDIR}/workspace.contour.dat workspace.contour.dem

${PLOTDIR}/workspace.contour2d.pdf: ${PLOTDIR}/workspace.contour.dat workspace.contour2d.dem

## join all workspace*.pdf files into joined_workspace.pdf
${PLOTDIR}/joined_workspace.pdf: ${PLOTFILES_WORKSPACE}

#
#---------------------------------------------------------------------


#---------------------------------------------------------------------
## velocity ramp plots


# just state the dependencies, the generic rule will generate the pdf
${PLOTDIR}/ramp%.pdf: ${PLOTDIR}/ramp%.dat ${PLOTDIR}/ramp%.dem 


# create data file ramp%.dat and gnuplot script ramp%.dem
.SECONDARY: $(PLOTFILES_RAMP:.pdf=.dem)
${PLOTDIR}/ramp%.dat ${PLOTDIR}/ramp%.dem: ramp.py 
#	# if you change the number of param list here you must change the setting of SEQ above too!
	@i=0; \
	for param in "--p0=0   --p3=90 --v0=0 --v3=0 --abs_max_v=100 --abs_max_a=10 " \
	             "--p0=0   --p3=90 --v0=0 --v3=0 --abs_max_v=20 --abs_max_a=10 " \
	             "--p0=45  --p3=-45 --v0=0 --v3=0 --abs_max_v=100 --abs_max_a=10 " \
	             "--p0=45  --p3=-45 --v0=0 --v3=0 --abs_max_v=20 --abs_max_a=10 " \
	             "--p0=0   --p3=50 --v0=0 --v3=30 --abs_max_v=20 --abs_max_a=10 " \
	             "--p0=0   --p3=20 --v0=0 --v3=30 --abs_max_v=20 --abs_max_a=10 " \
	             "--p0=0   --p3=20 --v0=-10 --v3=30 --abs_max_v=20 --abs_max_a=10 " \
	             "--p0=50  --p3=0 --v0=0 --v3=30 --abs_max_v=20 --abs_max_a=10 " \
	             "--p0=20  --p3=0 --v0=0 --v3=30 --abs_max_v=20 --abs_max_a=10 " \
	             "--p0=50  --p3=0 --v0=0 --v3=-30 --abs_max_v=20 --abs_max_a=10 " \
	             "--p0=20  --p3=0 --v0=0 --v3=-30 --abs_max_v=20 --abs_max_a=10 " \
	             "--p0=-90 --p3=90 --v0=0 --v3=0 --abs_max_v=100 --abs_max_a=10 " \
		     	 "--p0=45  --p3=-45 --v0=0 --v3=0 --abs_max_v=50 --abs_max_a=5 "  \
		     	 "--p0=-90 --p3=-89 --v0=-2 --v3=3 --abs_max_v=5 --abs_max_a=10 "  \
		     	 "--p0=-90 --p3=-89 --v0=-2 --v3=3 --abs_max_v=2 --abs_max_a=20 " \
	             "--p0=0,-10 --p3=80,90 --v0=0,0 --v3=0,0 --abs_max_v=14,50 --abs_max_a=10,20 " \
	             "--p0=0,-10 --p3=80,90 --v0=0,0 --v3=0,0 --abs_max_v=14,50 --abs_max_a=10,20 --sync" \
	             "--p0=80,-80 --p3=50,-50 --v0=-10,10 --v3=0,0 --abs_max_v=10,10 --abs_max_a=50,50 --sync" \
	             "--p0=80,-80 --p3=50,-50 --v0=-11,11 --v3=0,0 --abs_max_v=10,10 --abs_max_a=50,50 --sync" \
	             "--p0=80,-80 --p3=50,-50 --v0=-9,9 --v3=0,0 --abs_max_v=10,10 --abs_max_a=50,50 --sync" \
	             "--p0=53.862 --p3=50 --v0=-9.542 --v3=0 --abs_max_v=10 --abs_max_a=50" \
	             "--p0=53.862,-53.891,-53.862,-53.897,-53.870,-53.892,-53.896 --p3=50,-50,-50,-50,-50,-50,-50, --v0=-9.542,10.547,10.177,10.547,10.177,9.375,11.102 --v3=0,0,0,0,0,0,0 --abs_max_v=10,10,10,10,10,10,10 --abs_max_a=50,50,50,50,50,50,50 --sync" \
	             "--p0=65.156 --p3=50.000 --v0=-10.547 --v3=0.000 --abs_max_a=50.000 --abs_max_v=10" \
	             ; do \
	  if [ "$$i" == "$*" ]; then \
	    echo "Generating .dat/.dem file $$i with parameters $$param" ;\
	    export PYTHONPATH=./sdh:$$PYTHONPATH ;\
	    python ./ramp.py -d -o ${PLOTDIR}/ramp$$i.dat  -g ${PLOTDIR}/ramp$$i.dem \
		--gnuplot_prefix="" --gnuplot_suffix="" $$param;\
	  fi ; \
	  i=$$(($$i+1)) ;\
	done

## join all ramp*.pdf files into joined_ramps.pdf
${PLOTDIR}/joined_ramps.pdf: ${PLOTFILES_RAMP}

#-----------------------------------------------------------------------
# emacs settings:
# Local Variables:
# mode: Makefile
# End:
#-----------------------------------------------------------------------
#//! \endcond
########################################################################
